---
import type { CollectionEntry } from 'astro:content';
import '../styles/global.css';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, image } = Astro.props;

// FIX: Handle different image formats consistently
const getImageSrc = () => {
    if (image?.url) return image.url;
    if (typeof heroImage === 'string') return heroImage;
    if (heroImage?.src) return heroImage.src;
    return null;
};

const imageAlt = image?.alt || title;
const imageSrc = getImageSrc();
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--shadow-lg);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: var(--text-secondary);
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: var(--text-muted);
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{imageSrc ? (
						<img 
							src={imageSrc} 
							alt={imageAlt} 
							width="1020" 
							height="510" 
							loading="eager" 
						/>
					) : (
						<!-- Fallback for blog post hero -->
						<div class="w-full h-64 bg-gradient-to-br from-slate-700 via-slate-800 to-slate-900 flex items-center justify-center rounded-xl">
							<div class="text-center">
								<div class="text-6xl mb-4">ðŸ¤–</div>
								<div class="text-cyan-400 font-semibold text-lg">TechBrew Daily</div>
								<div class="text-slate-400 text-sm mt-2">Technology Blog</div>
							</div>
						</div>
					)}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
